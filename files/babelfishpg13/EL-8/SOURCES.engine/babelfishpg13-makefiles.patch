diff --git a/contrib/Makefile b/contrib/Makefile
index 13939a4fc3..caabcc1c67 100644
--- a/contrib/Makefile
+++ b/contrib/Makefile
@@ -54,8 +54,6 @@ SUBDIRS = \
 		unaccent	\
 		vacuumlo
 
-SUBDIRS += babelfishpg_tsql 
-
 ifeq ($(with_openssl),yes)
 SUBDIRS += sslinfo
 else
diff --git a/contrib/babelfishpg_common/Makefile b/contrib/babelfishpg_common/Makefile
index b168180662..c54cd77093 100644
--- a/contrib/babelfishpg_common/Makefile
+++ b/contrib/babelfishpg_common/Makefile
@@ -40,14 +40,16 @@ OBJS += src/coerce.o
 ifdef USE_PGXS
 PGXS := $(shell $(PG_CONFIG) --pgxs)
 include $(PGXS)
+VERSION = $(shell $(PG_CONFIG) --version | awk '{print $$2}' | sed -e 's/devel$$//')
+CFLAGS = `$(PG_CONFIG) --includedir-server`
 else
 subdir = contrib/babelfishpg_common
 top_builddir = ../..
 include $(top_builddir)/src/Makefile.global
 include $(top_srcdir)/contrib/contrib-global.mk
+PG_SRC=$(top_srcdir)
 endif
 
-
 MODULEPATH = $$libdir/$(EXTENSION)-$(BBFPGCMN_MAJOR_VERSION)
 
 UPGRADES = $(patsubst sql/upgrades/%.sql,sql/%.sql,$(wildcard sql/upgrades/*.sql))
@@ -62,8 +64,7 @@ DATA_built = \
 
 #include ../Makefile.common
 
-# Get Postgres version, as well as major (9.4, etc) version. Remove '.' from MAJORVER.
-VERSION 	 = $(shell $(PG_CONFIG) --version | awk '{print $$2}' | sed -e 's/devel$$//')
+# Get Postgres major (9.4, etc) version. Remove '.' from MAJORVER.
 MAJORVER 	 = $(shell echo $(VERSION) | cut -d . -f1,2 | tr -d .)
 
 # Function for testing a condition
@@ -71,9 +72,6 @@ test		 = $(shell test $(1) $(2) $(3) && echo yes || echo no)
 
 GE91		 = $(call test, $(MAJORVER), -ge, 91)
 
-PGXS := $(shell $(PG_CONFIG) --pgxs)
-include $(PGXS)
-
 ifeq ($(GE91),yes)
 all: sql/$(EXTENSION)--$(EXTVERSION).sql $(UPGRADES)
 endif
@@ -91,7 +89,4 @@ sql/$(EXTENSION)--$(EXTVERSION).sql: sql/$(EXTENSION).in
 sql/%.sql: sql/upgrades/%.sql
 	cp $< $@
 
-
-CFLAGS = `$(PG_CONFIG) --includedir-server`
-
 $(recurse)
diff --git a/contrib/babelfishpg_money/Makefile b/contrib/babelfishpg_money/Makefile
index 07c719d3c4..85281c2b1a 100755
--- a/contrib/babelfishpg_money/Makefile
+++ b/contrib/babelfishpg_money/Makefile
@@ -3,25 +3,13 @@ OBJS = fixeddecimal.o
 
 EXTENSION = babelfishpg_money
 
-#subdir = contrib/babelfishpg_money
+subdir = contrib/babelfishpg_money
 
 DATA = fixeddecimal--1.0.0--1.1.0.sql
 DATA_built = babelfishpg_money--1.1.0.sql
 
-#include ../Makefile.common
-
-CFLAGS = `$(PG_CONFIG) --includedir-server`
-
-TESTS = $(wildcard test/sql/*.sql)
-
-REGRESS_BRIN := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "XL 9\.[5-9]| 10\.0| 11\.[0-9]| 12\.[0-9]" && echo brin-xl)
-REGRESS_BRIN += $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -E "9\.[5-9]| 10\.0| 11\.[0-9]| 12\.[0-9]" | grep -qEv "XL" && echo brin)
-REGRESS_VERSION_SPECIFIC := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "XL" && echo index-xl || echo index)
-REGRESS = $(shell echo aggregate cast comparison overflow $(REGRESS_BRIN) $(REGRESS_VERSION_SPECIFIC))
-
-REGRESS_OPTS = --inputdir=test --outputdir=test --load-extension=babelfishpg_money
-
 ifdef USE_PGXS
+VERSION = $(shell $(PG_CONFIG) --version)
 PGXS := $(shell $(PG_CONFIG) --pgxs)
 include $(PGXS)
 else
@@ -31,15 +19,24 @@ include $(top_builddir)/src/Makefile.global
 include $(top_srcdir)/contrib/contrib-global.mk
 endif
 
-AGGSTATESQL := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "XL" && echo fixeddecimalaggstate.sql)
-AGGFUNCSSQL := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "XL" && echo fixeddecimal--xlaggs.sql)
+TESTS = $(wildcard test/sql/*.sql)
+
+REGRESS_BRIN := $(shell cho $(VERSION) | grep -qE "XL 9\.[5-9]| 10\.0| 11\.[0-9]| 12\.[0-9]| 13\.[0-9]" && echo brin-xl)
+REGRESS_BRIN += $(shell cho $(VERSION) | grep -E "9\.[5-9]| 10\.0| 11\.[0-9]| 12\.[0-9]| 13\.[0-9]" | grep -qEv "XL" && echo brin)
+REGRESS_VERSION_SPECIFIC := $(shell echo $(VERSION) | grep -qE "XL" && echo index-xl || echo index)
+REGRESS = $(shell echo aggregate cast comparison overflow $(REGRESS_BRIN) $(REGRESS_VERSION_SPECIFIC))
+
+REGRESS_OPTS = --inputdir=test --outputdir=test --load-extension=babelfishpg_money
+
+AGGSTATESQL := $(shell echo $(VERSION) | grep -qE "XL" && echo fixeddecimalaggstate.sql)
+AGGFUNCSSQL := $(shell echo $(VERSION) | grep -qE "XL" && echo fixeddecimal--xlaggs.sql)
 
-AGGFUNCSSQL := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "9\.[6-9]| 10\.[0-9]| 11\.[0-9]| 12\.[0-9]" && echo fixeddecimal--parallelaggs.sql || echo fixeddecimal--aggs.sql)
+AGGFUNCSSQL := $(shell echo $(VERSION) | grep -qE "9\.[6-9]| 10\.[0-9]| 11\.[0-9]| 12\.[0-9]| 13\.[0-9]" && echo fixeddecimal--parallelaggs.sql || echo fixeddecimal--aggs.sql)
 
-BRINSQL := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "9\.[5-9]| 10\.[0-9]| 11\.[0-9]| 12\.[0-9]" && echo fixeddecimal--brin.sql)
+BRINSQL := $(shell echo $(VERSION) | grep -qE "9\.[5-9]| 10\.[0-9]| 11\.[0-9]| 12\.[0-9]| 13\.[0-9]" && echo fixeddecimal--brin.sql)
 
 # 9.6 was the dawn of parallel query, so we'll use the parallel enabled .sql file from then on.
-BASESQL := $(shell LD_LIBRARY_PATH=$(LD_LIBRARY_PATH) $(PG_CONFIG) --version | grep -qE "9\.[6-9]| 10\.[0-9]| 11\.[0-9]| 12\.[0-9]" && echo fixeddecimal--1.1.0_base_parallel.sql || echo fixeddecimal--1.1.0_base.sql)
+BASESQL := $(shell echo $(VERSION) | grep -qE "9\.[6-9]| 10\.[0-9]| 11\.[0-9]| 12\.[0-9]| 13\.[0-9]" && echo fixeddecimal--1.1.0_base_parallel.sql || echo fixeddecimal--1.1.0_base.sql)
 
 OBJECTS := $(addprefix $(srcdir)/, $(AGGSTATESQL) $(BASESQL) $(AGGFUNCSSQL) $(BRINSQL))
 
diff --git a/contrib/babelfishpg_tds/Makefile b/contrib/babelfishpg_tds/Makefile
index 9ce8ba73f9..d755e9b159 100644
--- a/contrib/babelfishpg_tds/Makefile
+++ b/contrib/babelfishpg_tds/Makefile
@@ -10,6 +10,9 @@ tds_backend = $(tds_top_dir)/src/backend
 tds_include = $(tds_top_dir)/src/include
 TSQL_SRC = ../babelfishpg_tsql
 
+ifndef USE_PGXS
+PG_SRC = ../..
+endif
 PG_CPPFLAGS += -I$(TSQL_SRC) -I$(PG_SRC) -I$(tds_top_dir) -DFAULT_INJECTOR
 
 # Exclude the following files from the build (sometimes these
diff --git a/contrib/babelfishpg_tsql/Makefile b/contrib/babelfishpg_tsql/Makefile
index e99f5ca3e1..f01eebe09b 100644
--- a/contrib/babelfishpg_tsql/Makefile
+++ b/contrib/babelfishpg_tsql/Makefile
@@ -74,7 +74,11 @@ PG_CXXFLAGS += -Wno-undef -Wall -Wcpp
 PG_CXXFLAGS += -Wno-register # otherwise C++17 gags on PostgreSQL headers
 PG_CXXFLAGS += -I$(ANTLR4_RUNTIME_INCLUDE_DIR)
 PG_CFLAGS += -g
+ifndef USE_PGXS
+PG_SRC = ../..
+endif
 PG_CPPFLAGS += -I$(TSQLSRC) -I$(PG_SRC) -DFAULT_INJECTOR
+PG_CPPFLAGS += -I/usr/local/include/antlr4-runtime
 
 SHLIB_LINK += -L$(ANTLR4_RUNTIME_LIB_DIR) $(ANTLR4_RUNTIME_LIB) -lcrypto
 
@@ -91,16 +95,8 @@ DATA_built = \
 
 #include ../Makefile.common
 
-# Get Postgres version, as well as major (9.4, etc) version. Remove '.' from MAJORVER.
-VERSION 	 = $(shell $(PG_CONFIG) --version | awk '{print $$2}' | sed -e 's/devel$$//')
-MAJORVER 	 = $(shell echo $(VERSION) | cut -d . -f1,2 | tr -d .)
-
-# Function for testing a condition
-test		 = $(shell test $(1) $(2) $(3) && echo yes || echo no)
-
-GE91		 = $(call test, $(MAJORVER), -ge, 91)
-
 ifdef USE_PGXS
+VERSION 	 = $(shell $(PG_CONFIG) --version | awk '{print $$2}' | sed -e 's/devel$$//')
 PGXS := $(shell $(PG_CONFIG) --pgxs)
 include $(PGXS)
 else
@@ -109,6 +105,12 @@ top_builddir = ../..
 include $(top_builddir)/src/Makefile.global
 include $(top_srcdir)/contrib/contrib-global.mk
 endif
+MAJORVER 	 = $(shell echo $(VERSION) | cut -d . -f1,2 | tr -d .)
+
+# Function for testing a condition
+test		 = $(shell test $(1) $(2) $(3) && echo yes || echo no)
+
+GE91		 = $(call test, $(MAJORVER), -ge, 91)
 
 ifeq ($(GE91),yes)
 all: sql/$(EXTENSION)--$(EXTVERSION).sql $(UPGRADES)
@@ -144,12 +146,15 @@ GEN_KEYWORDLIST = $(PERL) -I $(TOOLSDIR) $(TOOLSDIR)/gen_keywordlist.pl
 GEN_KEYWORDLIST_DEPS = $(TOOLSDIR)/gen_keywordlist.pl $(TOOLSDIR)/PerfectHash.pm
 TSQLSRC = .
 
+ifndef USE_PGXS
+cmake = cmake
+endif
 antlr/Makefile: antlr/CMakeLists.txt antlr/TSqlLexer.g4 antlr/TSqlLexer.g4
-	cd antlr && $(cmake) . && cd ..
+	cd antlr && CFLAGS="$(shell echo $(CFLAGS) | sed -e 's/-fexcess-precision=[^ ]*//' -e 's/-Wmissing-prototypes//' -e 's/-Wdeclaration-after-statement//')" $(cmake) . && cd ..
 
 .PHONY: antlr/libantlr_tsql.a  # to allow CMake's make check the build
 antlr/libantlr_tsql.a: antlr/Makefile
-	$(MAKE) -C $(@D) all
+	CFLAGS="$(shell echo $(CFLAGS) | sed -e 's/-fexcess-precision=[^ ]*//' -e 's/-Wmissing-prototypes//' -e 's/-Wdeclaration-after-statement//')" $(MAKE) -C $(@D) all
 
 # See notes in src/backend/parser/Makefile about the following two rules
 src/pl_gram.h: src/pl_gram.c
